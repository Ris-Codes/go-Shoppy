name: Go Shoppy CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.4

    - name: Install dependencies
      run: go mod tidy

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build -t riscodes/go-shoppy:latest .

    - name: Push Docker image
      run: docker push riscodes/go-shoppy:latest

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  

    - name: Pull Docker image
      run: docker pull riscodes/go-shoppy:latest

    - name: Fix permissions
      run: sudo chmod -R 777 /home/ubuntu/actions-runner/_work/go-Shoppy/go-Shoppy/tmp

    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "SECRET=${{ secrets.SECRET }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "EMAIL=${{ secrets.EMAIL }}" >> .env
        echo "PASSWORD_KEY=${{ secrets.PASSWORD_KEY }}" >> .env
        echo "RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" >> .env
        echo "RAZORPAY_SECRET=${{ secrets.RAZORPAY_SECRET }}" >> .env

    - name: Deploy with Docker Compose
      run: |
        docker-compose down
        docker-compose up -d
